# リセット
rm(list=ls(all.names = TRUE))

# 必要なパッケージの読み込み
library(readxl) # Excel
library(dplyr)
library(tidyr)
library(curl) # ファイルダウンロード
library(stringi) # 文字列操作
library(stringr)
library(rvest) # Webスクレイピング

FullToHalf<- function(x){
  str_replace_all(x,"Ａ","A") %>%
    str_replace_all("Ｂ","B") %>%
    str_replace_all("Ｃ","C") %>%
    str_replace_all("Ｄ","D") %>%
    str_replace_all("Ｅ","E") %>%
    str_replace_all("Ｆ","F") %>%
    str_replace_all("Ｇ","G") %>%
    str_replace_all("Ｈ","H") %>%
    str_replace_all("Ｉ","I") %>%
    str_replace_all("Ｊ","J") %>%
    str_replace_all("Ｋ","K") %>%
    str_replace_all("Ｌ","L") %>%
    str_replace_all("Ｍ","M") %>%
    str_replace_all("Ｎ","N") %>%
    str_replace_all("Ｏ","O") %>%
    str_replace_all("Ｐ","P") %>%
    str_replace_all("Ｑ","Q") %>%
    str_replace_all("Ｒ","R") %>%
    str_replace_all("Ｓ","S") %>%
    str_replace_all("Ｔ","T") %>%
    str_replace_all("Ｕ","U") %>%
    str_replace_all("Ｖ","V") %>%
    str_replace_all("Ｗ","W") %>%
    str_replace_all("Ｘ","X") %>%
    str_replace_all("Ｙ","Y") %>%
    str_replace_all("Ｚ","Z")
}

# 個別ファイルの読み込み関数
ReadSheet<- function(url,year01,m){
  # ファイルのダウンロード及び解凍
  curl_download(url,"temp.zip")
  exfile<- unzip("temp.zip")
  
  file.remove("temp.zip")
  
  # 対象とするシート名（銀行単体のみ）の取得
  sheetNames<- excel_sheets(exfile)
  sheetNames<- sheetNames[grep("単体",sheetNames)]
  sheetNames<- sheetNames[grep("銀行",sheetNames)]
  
  #シート名分のループ
  for(i in 1:length(sheetNames)){
    # シートの読み込み
    tempdf<- read_excel(exfile,
                        sheet=sheetNames[i],
                        skip=0,
                        col_names=FALSE)
    # NA列を除去
    tempdf<- tempdf[!is.na(tempdf[,1]),]
    
    # データ部分の開始行及び列を取得（最初のシートのみ）
    if(i == 1){
      skiprows<- grep("Ref",unlist(as.vector(tempdf[,1])))[1]
      skipcols<- grep("みずほ銀行",tempdf[skiprows,])[1]
    }
    
    # 余分な冒頭行を削除
    tempdf<- tempdf[3:nrow(tempdf),]
    
    # 当該シードの銀行名を取得
    bankNames<- tempdf[1,seq(from=skipcols,to=length(tempdf[1,]),by=6)] %>%
      as.matrix()
    df<- c("銀行名",bankNames) %>% t() %>%
      as.data.frame(nrow=1,ncol=length(bankNames)+1)
    
    # ループでの保管用のダミー行
    temprow<- data.frame(nrow=1)
    
    # シートの行数分のループ
    for(j in 3:nrow(tempdf)){
      # 項目名の取得
      if(year01<2014){
        temprow[,1]<- str_remove_all(
          paste0(tempdf[j,1],
                 tempdf[j,2],
                 tempdf[j,3],
                 tempdf[j,4]),"NA")
      }else{
        temprow[,1]<- str_remove_all(
          paste0(tempdf[j,1],
                 tempdf[j,2],
                 tempdf[j,3],
                 tempdf[j,4],
                 tempdf[j,5],
                 tempdf[j,6]),"NA")
      }
      
      # データの取得（銀行名が入っている列の一つ右）
      temprow2<- tempdf[j,seq(from=skipcols+1,to=length(tempdf[j,]),by=6)] %>%
        as.matrix()
      temprow2<- as.numeric(temprow2)
      
      # 項目名とデータを統合
      temprow[,2:(length(temprow2)+1)]<- temprow2
      
      # 銀行名を列名に
      colnames(temprow)<- colnames(df)
      
      # 行を追加
      df<- rbind(df,temprow)
    }
    
    if(year01<2014){
      df[,1]<- str_replace_all(df[,1],
                               "Ｄ080　商品有価証券",
                               "Ｄ080　商品有価証券a") %>%
        str_replace_all("Ｄ235投資損失引当金",
                        "Ｄ235投資損失引当金a")
    }else{
      df[,1]<- str_replace_all(df[,1],
                               "D140商品有価証券",
                               "D140商品有価証券a") %>%
        str_replace_all("D380投資損失引当金",
                        "D380投資損失引当金a")
    }
    
    if(m == 1 & i == 1){
      rename<- df[,1]
      names<- str_remove_all(rename,"(0|1|2|3|4|5|6|7|8|9|　| )")
      itemNames<<- cbind(rename,names)
    }else if(year01<2014){
      names<- FullToHalf(df[,1]) %>%
        str_remove_all("(0|1|2|3|4|5|6|7|8|9|　| )") %>%
        str_replace_all("Aコマーシャル・ペーパー","Aコマーシャル･ペーパー")
      for(k in 1:length(names)){
        temp<- itemNames[match(names[k],itemNames[,2]),1]
        if(!is.na(temp)){
          df[k,1]<- temp
        }
      }
    }

    # 行列を転置、転置後の1列目＝銀行名を変数名に
    df<- t(df)
    colnames(df)<- df[1,]
    df<- df[-1,] %>% as.data.frame()
    
    # ロング型に変換してまとめる
    if(i == 1){
      DataBase<- gather(df,key=勘定項目,value=金額,-銀行名)
      bankList<- bankNames
    }else{
      tempData<- gather(df,key=勘定項目,value=金額,-銀行名)
      DataBase<- rbind(DataBase,tempData)
      bankList<- c(bankList,bankNames)
    }
  }
  
  # 数字を数値型に、年度を付加
  DataBase<- DataBase[!is.na(DataBase$金額),]
  DataBase$金額<- as.numeric(DataBase$金額)
  DataBase$年度<- year01
  
  file.remove(exfile)
  Datalist<- list(DataBase,bankList)
  
  # 出力
  Datalist
}

readOutline<- function(url02,year02,bankNames){
  curl_download(url02,"temp.xls")
  tempdf<- read_excel("temp.xls",col_names = F)
  file.remove("temp.xls")
  
  if(year02>2013){
    tempdf<- tempdf[,2:ncol(tempdf)]
  }
  skipcols<- 1

  skiprows<- grep("み",unlist(as.vector(tempdf[,skipcols])))[1]
  namesrow<- grep("名",unlist(as.vector(tempdf[,skipcols])))[1]

  df<- tempdf[skiprows:nrow(tempdf),skipcols:ncol(tempdf)]
  colnames(df)<- tempdf[namesrow,skipcols:ncol(tempdf)]
  colnames(df)<- str_remove_all(colnames(df)," ")
  colnames(df)<- str_remove_all(colnames(df),"\n")
  colnames(df)<- str_remove_all(colnames(df),"（百万円）")
  
  df<- df[,grep(TRUE,!is.na(colnames(df)))]
  if(year02>2013){
    df<- df[!is.na(df$`本店所在地`),]
  }else{
    df<- df[!is.na(df$本店),]
  }
  df<- df[!is.na(df$資本金),]
  df<- df[,-2]
  
  bankNames02<- str_remove_all(bankNames,"(1|2|3|4|5|6|7|8|9|0|銀行|　)")
  bankTrans<- cbind(bankNames,bankNames02)
  df$銀行名<- str_remove_all(df$銀行名,"( |　)")
  for(k in 1:nrow(df)){
    df$銀行名[k]<- bankTrans[match(df$銀行名[k],bankTrans[,2]),1]
  }
  df<- df[!is.na(df$銀行名),]

  df02<- gather(df,-銀行名,key=勘定項目,value=金額)
  df02$年度<- year02
  df02$金額<- as.numeric(df02$金額)
  df02
}

# URLの取得
html<- read_html("https://www.zenginkyo.or.jp/stats/year2-02/") %>%
  html_elements("a") %>%
  html_attr("href")
link<- html[grep("terminal",html)]
link<- paste0("https://www.zenginkyo.or.jp",link)

# URLから年度を取得
year<- str_remove_all(link,"https://www.zenginkyo.or.jp/stats/year2-02/account") %>%
  str_remove_all("-terminal/") %>%
  as.numeric()

# ファイル形式の関係で2005年以降に限定
year<- year[year>2004]
link<- link[1:length(year)]

# 対象年分のループ
for(m in 1:length(year)){
  # ターゲットとなる表（個別行のBS/PLがまとまったzip）のURLを取得
  html<- read_html(link[m]) %>%
    html_elements("a") %>%
    html_attr("href")
  url<- paste0("https://www.zenginkyo.or.jp",
               html[grep("kobetsu",html)])
  if(year[m]>2016){
    url02<- paste0("https://www.zenginkyo.or.jp",
                   html[grep("shihon",html)])
  }else{
    url02<- paste0("https://www.zenginkyo.or.jp",
                   html[grep("sihon",html)])
  }

  # 関数を利用してシートから読み込む
  tempDatalist<- ReadSheet(url,year[m],m)
  tempDataBase<- tempDatalist[[1]]
  bankNames<- tempDatalist[[2]]
  
  tempDataBase02<- readOutline(url02,year[m],bankNames)
  tempDataBase<- rbind(tempDataBase,tempDataBase02)
  
  # 読み込んだ結果をまとめる
  if(m == 1){
    DataBase<- tempDataBase
  }else{
    DataBase<- rbind(DataBase,tempDataBase)
  }
}

DataBase02<- DataBase

write.csv(DataBase02,"全銀決算DB.csv",fileEncoding = "SHIFT-JIS")

